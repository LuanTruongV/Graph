name: Unity CI/CD

on:
  push:
    branches: [ "master" ]

env:
  UNITY_PROJECT_PATH: ${{ github.workspace }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-target: [Android]

    steps:
      # 1. Checkout source
      - uses: actions/checkout@v4
        with:
          clean: true
          lfs: true
          submodules: recursive

      # 2. Setup Unity
      - uses: buildalon/unity-setup@v1
        with:
          build-targets: ${{ matrix.build-target }}

      # 3. Activate Unity Personal License (giữ như cũ bạn dùng)
      - uses: buildalon/activate-unity-license@v1
        with:
          license: Personal
          username: ${{ secrets.UNITY_USERNAME }}
          password: ${{ secrets.UNITY_PASSWORD }}

      # 4. (Optional) Add Build Pipeline Package
      - name: Add Build Pipeline Package
        working-directory: ${{ env.UNITY_PROJECT_PATH }}
        run: |
          npm install -g openupm-cli
          openupm add com.virtualmaker.buildalon

      # 5. Validate Project
      - uses: buildalon/unity-action@v1
        name: Project Validation
        with:
          log-name: project-validation
          build-target: ${{ matrix.build-target }}
          args: -quit -batchmode -executeMethod Buildalon.Editor.BuildPipeline.UnityPlayerBuildTools.ValidateProject

      # 6. Build Android
      - uses: buildalon/unity-action@v1
        name: ${{ matrix.build-target }} Build
        with:
          log-name: ${{ matrix.build-target }}-build
          build-target: ${{ matrix.build-target }}
          args: -quit -batchmode -executeMethod Buildalon.Editor.BuildPipeline.UnityPlayerBuildTools.StartCommandLineBuild

      # 7. Upload artifacts (APK + logs)
      - uses: actions/upload-artifact@v4
        name: Upload ${{ matrix.build-target }} Artifacts
        if: success() || failure()
        with:
          name: ${{ github.run_number }}.${{ github.run_attempt }}-${{ matrix.build-target }}-Artifacts
          compression-level: 0
          retention-days: 1
          path: |
            ${{ github.workspace }}/**/*.log
            ${{ env.UNITY_PROJECT_PATH }}/Builds/Android/**/*.apk

      # 8. Clean artifacts (bash thay pwsh)
      - name: Clean Artifacts
        if: always()
        run: |
          echo "::debug::Cleaning logs and build artifacts..."
          find "${{ env.UNITY_PROJECT_PATH }}" -name "*.log" -type f -delete
          rm -rf "${{ env.UNITY_PROJECT_PATH }}/Builds"

      # 9. Telegram Notification
      - name: Notify Telegram
        if: always()
        run: |
          STATUS="✅ Build *Android* (Unity 2022.3 Personal) thành công trên branch *${{ github.ref_name }}*"
          if [ "${{ job.status }}" != "success" ]; then STATUS="❌ Build Android thất bại trên branch *${{ github.ref_name }}*"; fi
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="$STATUS" \
            -d parse_mode="Markdown"
